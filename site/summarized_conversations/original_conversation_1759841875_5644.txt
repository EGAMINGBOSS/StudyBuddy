{'role': 'assistant', 'content': 'Let\'s create a simple API endpoint to handle the authentication:\n\n<function_calls>\n<create-file file_path="website/StudentPlatform/api/auth.php">\n<?php\n// Initialize session\nsession_start();\n\n// Set headers for JSON response\nheader(\'Content-Type: application/json\');\nheader(\'Access-Control-Allow-Origin: *\');\nheader(\'Access-Control-Allow-Methods: POST, GET, OPTIONS\');\nheader(\'Access-Control-Allow-Headers: Content-Type\');\n\n// Include database connection\nrequire_once "../config/database.php";\nrequire_once "../backend/auth.php";\n\n// Create Auth instance\n$auth = new Auth();\n\n// Handle different request methods\n$method = $_SERVER[\'REQUEST_METHOD\'];\n\n// Handle preflight OPTIONS request\nif ($method === \'OPTIONS\') {\n    http_response_code(200);\n    exit();\n}\n\n// Handle POST requests\nif ($method === \'POST\') {\n    // Get JSON data from request body\n    $json = file_get_contents(\'php://input\');\n    $data = json_decode($json, true);\n    \n    // If JSON parsing failed, try to get data from POST\n    if ($data === null) {\n        $data = $_POST;\n    }\n    \n    // Check action parameter\n    $action = isset($data[\'action\']) ? $data[\'action\'] : \'\';\n    \n    switch ($action) {\n        case \'login\':\n            // Validate required fields\n            if (!isset($data[\'username\']) || !isset($data[\'password\'])) {\n                echo json_encode([\'success\' => false, \'message\' => \'Username and password are required\']);\n                exit();\n            }\n            \n            // Attempt to login\n            $result = $auth->login($data[\'username\'], $data[\'password\']);\n            echo json_encode($result);\n            break;\n            \n        case \'register\':\n            // Validate required fields\n            if (!isset($data[\'username\']) || !isset($data[\'email\']) || !isset($data[\'password\'])) {\n                echo json_encode([\'success\' => false, \'message\' => \'Username, email, and password are required\']);\n                exit();\n            }\n            \n            // Get optional full name\n            $full_name = isset($data[\'full_name\']) ? $data[\'full_name\'] : \'\';\n            \n            // Attempt to register\n            $result = $auth->register($data[\'username\'], $data[\'email\'], $data[\'password\'], $full_name);\n            echo json_encode($result);\n            break;\n            \n        case \'verify\':\n            // Validate required fields\n            if (!isset($data[\'user_id\']) || !isset($data[\'code\'])) {\n                echo json_encode([\'success\' => false, \'message\' => \'User ID and verification code are required\']);\n                exit();\n            }\n            \n            // Attempt to verify\n            require_once "../backend/email_verification.php";\n            $emailVerification = new EmailVerification();\n            $result = $emailVerification->verifyCode($data[\'user_id\'], $data[\'code\']);\n            \n            echo json_encode([\'success\' => $result, \'message\' => $result ? \'Email verified successfully\' : \'Invalid or expired verification code\']);\n            break;\n            \n        case \'logout\':\n            // Logout user\n            $result = $auth->logout();\n            echo json_encode($result);\n            break;\n            \n        default:\n            echo json_encode([\'success\' => false, \'message\' => \'Invalid action\']);\n            break;\n    }\n} \n// Handle GET requests\nelse if ($method === \'GET\') {\n    $action = isset($_GET[\'action\']) ? $_GET[\'action\'] : \'\';\n    \n    switch ($action) {\n        case \'check\':\n            // Check if user is logged in\n            $isLoggedIn = $auth->isLoggedIn();\n            $user = $auth->getCurrentUser();\n            \n            echo json_encode([\n                \'success\' => true,\n                \'logged_in\' => $isLoggedIn,\n                \'user\' => $user\n            ]);\n            break;\n            \n        default:\n            echo json_encode([\'success\' => false, \'message\' => \'Invalid action\']);\n            break;\n    }\n} \n// Handle unsupported methods\nelse {\n    http_response_code(405);\n    echo json_encode([\'success\' => false, \'message\' => \'Method not allowed\']);\n}\n?>\n</create-file>\n</function_calls>'}